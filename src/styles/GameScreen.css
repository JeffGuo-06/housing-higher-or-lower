.game-screen {
  min-height: 100vh;
  padding: 20px;
}

.game-header {
  max-width: 1200px;
  margin: 0 auto 30px;
  text-align: center;
}

.score-display {
  display: inline-flex;
  align-items: center;
  gap: 12px;
  background: var(--color-neutral);
  padding: 12px 30px;
  border-radius: 50px;
  border: 3px solid var(--color-neutral);
  transition: all 0.4s ease;
}

.score-display.score-increment {
  background: var(--color-higher);
  border-color: var(--color-higher);
  animation: scoreFlash 0.8s ease;
}

.score-display.score-increment .score-icon,
.score-display.score-increment .score-value {
  animation: scorePulse 0.4s ease;
  color: white;
}

.score-display.score-decrement {
  background: var(--color-lower);
  border-color: var(--color-lower);
  animation: scoreFlashRed 0.8s ease;
}

.score-display.score-decrement .score-icon,
.score-display.score-decrement .score-value {
  animation: scorePulse 0.4s ease;
  color: white;
}

.score-icon {
  width: 28px;
  height: 28px;
  color: white;
  flex-shrink: 0;
}

.score-display .score-value {
  font-size: 2rem;
  font-weight: 700;
  color: white;
  line-height: 1;
  display: flex;
  align-items: center;
}

.game-content {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
}

.properties-container {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  gap: 30px;
  align-items: start;
}

.property-left,
.property-right {
  display: flex;
  justify-content: center;
  transition: transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.property-right.slide-left {
  animation: slidePropertyLeft 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.property-right.fall-down {
  animation: fallOffPage 0.8s cubic-bezier(0.6, 0, 1, 1) forwards;
}

.vs-divider {
  font-size: 2rem;
  font-weight: 800;
  color: var(--color-text);
  padding: 20px;
  background: var(--color-bg-light);
  border-radius: 50%;
  width: 80px;
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 3px solid var(--color-border);
  align-self: start;
  margin-top: 20vh;
}

.guess-buttons {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.guess-button {
  background: var(--color-bg);
  color: var(--color-text);
  font-size: 1.2rem;
  font-weight: 700;
  padding: 16px 30px;
  border-radius: 8px;
  border: 2px solid var(--color-border);
  transition: all 0.3s ease;
}

.guess-button.higher {
  background: var(--color-higher);
  color: white;
  border-color: var(--color-higher);
}

.guess-button.higher:hover {
  background: #16a34a;
  border-color: #16a34a;
  transform: translateY(-2px);
}

.guess-button.lower {
  background: var(--color-lower);
  color: white;
  border-color: var(--color-lower);
}

.guess-button.lower:hover {
  background: #dc2626;
  border-color: #dc2626;
  transform: translateY(-2px);
}

.feedback-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.3s ease;
}

.feedback-overlay.correct {
  background: rgba(16, 185, 129, 0.15);
}

.feedback-overlay.wrong {
  background: rgba(239, 68, 68, 0.15);
}

.feedback-message {
  font-size: 4rem;
  font-weight: 800;
  padding: 40px 60px;
  border-radius: 20px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
  animation: scaleIn 0.4s ease;
}

.feedback-overlay.correct .feedback-message {
  background: var(--color-higher);
  color: white;
}

.feedback-overlay.wrong .feedback-message {
  background: var(--color-lower);
  color: white;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes slidePropertyLeft {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-100% - 140px));
  }
}

@keyframes slidePropertyUp {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(calc(-100% - 100px));
  }
}

@keyframes fallOffPage {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
    opacity: 1;
  }
  10% {
    transform: translateX(-5px) translateY(0) rotate(0deg);
    opacity: 1;
  }
  20% {
    transform: translateX(5px) translateY(0) rotate(0deg);
    opacity: 1;
  }
  30% {
    transform: translateX(-5px) translateY(0) rotate(0deg);
    opacity: 1;
  }
  40% {
    transform: translateX(0) translateY(0) rotate(0deg);
    opacity: 1;
  }
  55% {
    transform: translateX(0) translateY(30px) rotate(5deg);
    opacity: 1;
  }
  100% {
    transform: translateX(0) translateY(150vh) rotate(25deg);
    opacity: 0;
  }
}

@keyframes scoreFlash {
  0% {
    background: var(--color-neutral);
    transform: scale(1);
  }
  30% {
    background: var(--color-higher);
    transform: scale(1.15);
  }
  100% {
    background: var(--color-higher);
    transform: scale(1);
  }
}

@keyframes scoreFlashRed {
  0% {
    background: var(--color-neutral);
    transform: scale(1);
  }
  30% {
    background: var(--color-lower);
    transform: scale(1.15);
  }
  100% {
    background: var(--color-lower);
    transform: scale(1);
  }
}

@keyframes scorePulse {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
}

@media (max-width: 1024px) {
  .properties-container {
    grid-template-columns: 1fr;
    gap: 20px;
  }

  .vs-divider {
    width: 60px;
    height: 60px;
    font-size: 1.5rem;
    margin: 0 auto;
    align-self: center;
  }

  .feedback-message {
    font-size: 3rem;
    padding: 30px 40px;
  }

  .property-right.slide-left {
    animation: slidePropertyUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }
}

@media (max-width: 768px) {
  .score-display {
    padding: 10px 24px;
  }

  .score-icon {
    width: 22px;
    height: 22px;
  }

  .score-display .score-value {
    font-size: 1.5rem;
  }

  .feedback-message {
    font-size: 2.5rem;
    padding: 24px 32px;
  }
}
